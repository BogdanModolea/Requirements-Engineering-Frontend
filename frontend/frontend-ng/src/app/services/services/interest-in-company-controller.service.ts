/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { expressInterest } from '../fn/interest-in-company-controller/express-interest';
import { ExpressInterest$Params } from '../fn/interest-in-company-controller/express-interest';
import { getInterestsByCompany } from '../fn/interest-in-company-controller/get-interests-by-company';
import { GetInterestsByCompany$Params } from '../fn/interest-in-company-controller/get-interests-by-company';
import { getInterestsByStudent } from '../fn/interest-in-company-controller/get-interests-by-student';
import { GetInterestsByStudent$Params } from '../fn/interest-in-company-controller/get-interests-by-student';
import { InterestInCompany } from '../models/interest-in-company';

@Injectable({ providedIn: 'root' })
export class InterestInCompanyControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `expressInterest()` */
  static readonly ExpressInterestPath = '/api/interests/express';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `expressInterest()` instead.
   *
   * This method doesn't expect any request body.
   */
  expressInterest$Response(params: ExpressInterest$Params, context?: HttpContext): Observable<StrictHttpResponse<InterestInCompany>> {
    return expressInterest(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `expressInterest$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  expressInterest(params: ExpressInterest$Params, context?: HttpContext): Observable<InterestInCompany> {
    return this.expressInterest$Response(params, context).pipe(
      map((r: StrictHttpResponse<InterestInCompany>): InterestInCompany => r.body)
    );
  }

  /** Path part for operation `getInterestsByStudent()` */
  static readonly GetInterestsByStudentPath = '/api/interests/student/{studentId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getInterestsByStudent()` instead.
   *
   * This method doesn't expect any request body.
   */
  getInterestsByStudent$Response(params: GetInterestsByStudent$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<InterestInCompany>>> {
    return getInterestsByStudent(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getInterestsByStudent$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getInterestsByStudent(params: GetInterestsByStudent$Params, context?: HttpContext): Observable<Array<InterestInCompany>> {
    return this.getInterestsByStudent$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<InterestInCompany>>): Array<InterestInCompany> => r.body)
    );
  }

  /** Path part for operation `getInterestsByCompany()` */
  static readonly GetInterestsByCompanyPath = '/api/interests/company/{company}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getInterestsByCompany()` instead.
   *
   * This method doesn't expect any request body.
   */
  getInterestsByCompany$Response(params: GetInterestsByCompany$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<InterestInCompany>>> {
    return getInterestsByCompany(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getInterestsByCompany$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getInterestsByCompany(params: GetInterestsByCompany$Params, context?: HttpContext): Observable<Array<InterestInCompany>> {
    return this.getInterestsByCompany$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<InterestInCompany>>): Array<InterestInCompany> => r.body)
    );
  }

}
